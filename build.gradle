/*
 * Copyright 2002-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'org.springframework.cloud.credhub.broker'
archivesBaseName = 'credential-service-broker'
version = '0.0.1.BUILD-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/release" }
	maven { url "https://repo.spring.io/libs-staging-local" }
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.hateoas:spring-hateoas:0.24.0.RELEASE')
    compile('org.springframework.cloud:spring-cloud-starter-open-service-broker-webmvc:2.0.1.RELEASE')
    compile('org.springframework.credhub:spring-credhub-starter:1.0.1.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.projectlombok:lombok:1.16.22')

	runtime('org.springframework.boot:spring-boot-devtools')

	runtime('org.hsqldb:hsqldb')
	runtime('mysql:mysql-connector-java')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
	testCompile('org.assertj:assertj-core')
}

apply plugin: 'maven'

task createPom << {
    pom {
        project {
            groupId 'org.springframework.cloud.credhub.broker'
            artifactId 'credential-service-broker'
            version '0.0.1.BUILD-SNAPSHOT'

        }
    }.writeTo("pom.xml")
}
